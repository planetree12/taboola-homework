/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "com.github.ben-manes.versions" version "0.52.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.13.0-M3'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.13.0-M3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.13.0-M3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.assertj:assertj-core:4.0.0-M1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
